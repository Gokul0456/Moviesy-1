name: build
on:
  push:
    paths-ignore:
      - "README.md"
      - "UPDATE"
      - "art/**"
  pull_request:
    paths-ignore:
      - "README.md"
      - "UPDATE"
      - "art/**"
jobs:
  buildJob:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: chmod +x gradlew
        
      # Extracting required modules
      
      - name: Providing required modules
        uses: RollyPeres/base64-to-path@v1
        with:
          filePath: ${{ github.workspace }}/module.tar.gz
          encodedString: ${{ secrets.PROTECT_MODULE }}
      - run: |
          tar -xzf module.tar.gz
          tar -xzf art/tools.tar.gz
      
      # Fill the required local.properties
     
      - name: Filling required local.properties
        run: |
          echo tmdb_api_key=${{ secrets.TMDB_API_KEY }} >> local.properties
          echo google_client_id_web=${{ secrets.GOOGLE_CLIENT_WEB_ID }} >> local.properties
      - name: Providing service.json
        uses: RollyPeres/base64-to-path@v1
        with:
          filePath: ${{ github.workspace }}/app/google-services.json
          encodedString: ${{ secrets.GOOGLE_JSON }}
      
      # Extarcting signing key.
      
      - name: Providing signing key
        uses: RollyPeres/base64-to-path@v1
        with:
          filePath: ${{ github.workspace }}/key.jks
          encodedString: ${{ secrets.KEY_JKS }}
      
      - name: Assemble & Sign
        run: |
          ./gradlew app:assembleRelease --stacktrace
          ${{ github.workspace }}/zipalign.exe -v -p 4 app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release-unsigned-aligned.apk
          ${{ github.workspace }}/apksigner.bat sign --ks key.jks ${{ secrets.KEY_PARAMS }} --out app/release/app-release.apk app/build/outputs/apk/release/app-release-unsigned-aligned.apk

      - name: Drafing a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: vX.X
          release_name: Year based title
          draft: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/release/app-release.apk
          asset_name: app-release_vX.X.exe
          asset_content_type: application/octet-stream

  notification:
    needs: [buildJob]
    runs-on: ubuntu-latest
    steps:
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(echo ${{ github.sha }} | cut -c -7)"
      - name: Sending complete notifications
        env:
          DISCORD_WEBHOOK: ${{ secrets.WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "${{ github.event.repository.full_name }} with commit ${{ steps.vars.outputs.sha_short }} had a successful build!"
